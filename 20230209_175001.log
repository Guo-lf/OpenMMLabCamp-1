2023-02-09 17:50:03,356 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: win32
Python: 3.7.13 (default, Oct 19 2022, 10:19:43) [MSC v.1916 64 bit (AMD64)]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3060
CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.1
NVCC: Cuda compilation tools, release 11.1, V11.1.74
MSVC: 用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.29.30147 版
GCC: n/a
PyTorch: 1.10.1
PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192829337
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=C:/cb/pytorch_1000000000000/work/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -DUSE_PTHREADPOOL -openmp:experimental -IC:/cb/pytorch_1000000000000/work/mkl/include -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, 

TorchVision: 0.11.2
OpenCV: 4.6.0
MMCV: 1.6.2
MMCV Compiler: MSVC 192829924
MMCV CUDA Compiler: 11.3
MMDetection: 2.27.0+
------------------------------------------------------------

2023-02-09 17:50:03,513 - mmdet - INFO - Distributed training: False
2023-02-09 17:50:03,675 - mmdet - INFO - Config:
model = dict(
    type='MaskRCNN',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=1,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
        mask_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        mask_head=dict(
            type='FCNMaskHead',
            num_convs=4,
            in_channels=256,
            conv_out_channels=256,
            num_classes=1,
            loss_mask=dict(
                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            mask_size=28,
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100,
            mask_thr_binary=0.5)))
dataset_type = 'CocoDataset'
classes = ('balloon', )
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='E:/2023/dataset/balloon/train/annotation_coco.json',
        classes=('balloon', ),
        img_prefix='E:/2023/dataset/balloon/train/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(
                type='Collect',
                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='E:/2023/dataset/balloon/val/annotation_coco.json',
        classes=('balloon', ),
        img_prefix='E:/2023/dataset/balloon/val/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='E:/2023/dataset/balloon/val/annotation_coco.json',
        classes=('balloon', ),
        img_prefix='E:/2023/dataset/balloon/val/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(metric=['bbox', 'segm'], interval=2)
optimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = None
runner = dict(type='EpochBasedRunner', max_epochs=24)
checkpoint_config = dict(interval=4)
log_config = dict(
    interval=10,
    hooks=[
        dict(type='TextLoggerHook'),
        dict(
            type='MMDetWandbHook',
            init_kwargs=dict(
                project='mmdetection', group='maskrcnn-r50-fpn-1x-coco'),
            interval=50,
            log_checkpoint=True,
            log_checkpoint_metadata=True,
            num_eval_images=13)
    ])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'E:/2023/mmlab/mmdetection-master/checkpoints/mask_rcnn_r50_fpn_1x_coco_20200205-d4b0c5d6.pth'
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
auto_scale_lr = dict(enable=False, base_batch_size=16)
work_dir = './work_dirs/mask_rcnn_r50_fpn_1x_wandb_balloon_coco_pretrain'
auto_resume = False
gpu_ids = [0]

2023-02-09 17:50:03,679 - mmdet - INFO - Set random seed to 1542451964, deterministic: False
2023-02-09 17:50:03,841 - mmdet - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
2023-02-09 17:50:03,915 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-02-09 17:50:03,925 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-02-09 17:50:03,928 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([2, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([4, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.mask_head.convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.upsample.weight - torch.Size([256, 256, 2, 2]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.upsample.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.conv_logits.weight - torch.Size([1, 256, 1, 1]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.conv_logits.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in FCNMaskHead  
2023-02-09 17:50:04,148 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2023-02-09 17:50:04,627 - mmdet - INFO - load checkpoint from local path: E:/2023/mmlab/mmdetection-master/checkpoints/mask_rcnn_r50_fpn_1x_coco_20200205-d4b0c5d6.pth
2023-02-09 17:50:04,716 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for roi_head.bbox_head.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([2, 1024]).
size mismatch for roi_head.bbox_head.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([2]).
size mismatch for roi_head.bbox_head.fc_reg.weight: copying a param with shape torch.Size([320, 1024]) from checkpoint, the shape in current model is torch.Size([4, 1024]).
size mismatch for roi_head.bbox_head.fc_reg.bias: copying a param with shape torch.Size([320]) from checkpoint, the shape in current model is torch.Size([4]).
size mismatch for roi_head.mask_head.conv_logits.weight: copying a param with shape torch.Size([80, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 256, 1, 1]).
size mismatch for roi_head.mask_head.conv_logits.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([1]).
2023-02-09 17:50:04,730 - mmdet - INFO - Start running, host: a@DESKTOP-GBB9C9S, work_dir: E:\2023\mmlab\mmdetection-master\tools\work_dirs\mask_rcnn_r50_fpn_1x_wandb_balloon_coco_pretrain
2023-02-09 17:50:04,730 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) MMDetWandbHook                     
 -------------------- 
before_train_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) MMDetWandbHook                     
 -------------------- 
before_train_iter:
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) MMDetWandbHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) MMDetWandbHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) MMDetWandbHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) MMDetWandbHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) MMDetWandbHook                     
 -------------------- 
2023-02-09 17:50:04,730 - mmdet - INFO - workflow: [('train', 1)], max: 24 epochs
2023-02-09 17:50:04,730 - mmdet - INFO - Checkpoints will be saved to E:\2023\mmlab\mmdetection-master\tools\work_dirs\mask_rcnn_r50_fpn_1x_wandb_balloon_coco_pretrain by HardDiskBackend.
2023-02-09 17:50:34,449 - mmdet - INFO - Epoch [1][10/31]	lr: 1.000e-03, eta: 0:19:01, time: 1.555, data_time: 0.635, memory: 3731, loss_rpn_cls: 0.0629, loss_rpn_bbox: 0.0167, loss_cls: 0.4444, acc: 81.2109, loss_bbox: 0.3494, loss_mask: 2.5212, loss: 3.3946
2023-02-09 17:50:38,691 - mmdet - INFO - Epoch [1][20/31]	lr: 1.000e-03, eta: 0:11:55, time: 0.422, data_time: 0.031, memory: 3731, loss_rpn_cls: 0.0635, loss_rpn_bbox: 0.0253, loss_cls: 0.2352, acc: 92.0605, loss_bbox: 0.2821, loss_mask: 0.5593, loss: 1.1654
2023-02-09 17:50:42,909 - mmdet - INFO - Epoch [1][30/31]	lr: 1.000e-03, eta: 0:09:31, time: 0.426, data_time: 0.032, memory: 3731, loss_rpn_cls: 0.0382, loss_rpn_bbox: 0.0205, loss_cls: 0.1867, acc: 92.6367, loss_bbox: 0.2641, loss_mask: 0.2599, loss: 0.7695
2023-02-09 17:50:53,946 - mmdet - INFO - Epoch [2][10/31]	lr: 1.000e-03, eta: 0:09:48, time: 1.029, data_time: 0.600, memory: 3748, loss_rpn_cls: 0.0323, loss_rpn_bbox: 0.0183, loss_cls: 0.2217, acc: 89.8535, loss_bbox: 0.3592, loss_mask: 0.2014, loss: 0.8328
2023-02-09 17:50:58,208 - mmdet - INFO - Epoch [2][20/31]	lr: 1.000e-03, eta: 0:08:45, time: 0.431, data_time: 0.033, memory: 3748, loss_rpn_cls: 0.0223, loss_rpn_bbox: 0.0210, loss_cls: 0.2212, acc: 88.5938, loss_bbox: 0.4442, loss_mask: 0.1739, loss: 0.8826
2023-02-09 17:51:02,582 - mmdet - INFO - Epoch [2][30/31]	lr: 1.000e-03, eta: 0:08:00, time: 0.432, data_time: 0.028, memory: 3748, loss_rpn_cls: 0.0431, loss_rpn_bbox: 0.0196, loss_cls: 0.1777, acc: 92.0312, loss_bbox: 0.3192, loss_mask: 0.1905, loss: 0.7502
2023-02-09 17:51:11,850 - mmdet - INFO - Evaluating bbox...
2023-02-09 17:51:11,924 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.545
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.775
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.731
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.003
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.376
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.618
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.666
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.666
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.666
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.050
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.583
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.728

2023-02-09 17:51:11,924 - mmdet - INFO - Evaluating segm...
2023-02-09 17:51:11,995 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.676
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.773
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.744
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.006
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.488
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.753
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.300
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.767
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.839

2023-02-09 17:51:11,996 - mmdet - INFO - Exp name: mask_rcnn_r50_fpn_1x_wandb_coco.py
2023-02-09 17:51:11,996 - mmdet - INFO - Epoch(val) [2][13]	bbox_mAP: 0.5450, bbox_mAP_50: 0.7750, bbox_mAP_75: 0.7310, bbox_mAP_s: 0.0030, bbox_mAP_m: 0.3760, bbox_mAP_l: 0.6180, bbox_mAP_copypaste: 0.545 0.775 0.731 0.003 0.376 0.618, segm_mAP: 0.6760, segm_mAP_50: 0.7730, segm_mAP_75: 0.7440, segm_mAP_s: 0.0060, segm_mAP_m: 0.4880, segm_mAP_l: 0.7530, segm_mAP_copypaste: 0.676 0.773 0.744 0.006 0.488 0.753
2023-02-09 17:51:24,392 - mmdet - INFO - Epoch [3][10/31]	lr: 1.000e-03, eta: 0:08:16, time: 1.023, data_time: 0.602, memory: 3749, loss_rpn_cls: 0.0230, loss_rpn_bbox: 0.0153, loss_cls: 0.1687, acc: 93.2910, loss_bbox: 0.3537, loss_mask: 0.1577, loss: 0.7184
2023-02-09 17:51:28,855 - mmdet - INFO - Epoch [3][20/31]	lr: 1.000e-03, eta: 0:07:45, time: 0.447, data_time: 0.037, memory: 3845, loss_rpn_cls: 0.0170, loss_rpn_bbox: 0.0221, loss_cls: 0.1607, acc: 94.4531, loss_bbox: 0.3463, loss_mask: 0.1582, loss: 0.7042
2023-02-09 17:51:33,085 - mmdet - INFO - Epoch [3][30/31]	lr: 1.000e-03, eta: 0:07:18, time: 0.425, data_time: 0.031, memory: 3845, loss_rpn_cls: 0.0150, loss_rpn_bbox: 0.0127, loss_cls: 0.1041, acc: 96.1328, loss_bbox: 0.1659, loss_mask: 0.1039, loss: 0.4016
2023-02-09 17:51:44,389 - mmdet - INFO - Epoch [4][10/31]	lr: 1.000e-03, eta: 0:07:31, time: 1.063, data_time: 0.613, memory: 3893, loss_rpn_cls: 0.0128, loss_rpn_bbox: 0.0240, loss_cls: 0.1408, acc: 94.7070, loss_bbox: 0.1959, loss_mask: 0.1600, loss: 0.5335
2023-02-09 17:51:48,593 - mmdet - INFO - Epoch [4][20/31]	lr: 1.000e-03, eta: 0:07:08, time: 0.422, data_time: 0.029, memory: 3893, loss_rpn_cls: 0.0150, loss_rpn_bbox: 0.0121, loss_cls: 0.0935, acc: 96.6504, loss_bbox: 0.1381, loss_mask: 0.1046, loss: 0.3634
2023-02-09 17:51:52,710 - mmdet - INFO - Epoch [4][30/31]	lr: 1.000e-03, eta: 0:06:48, time: 0.414, data_time: 0.026, memory: 3893, loss_rpn_cls: 0.0063, loss_rpn_bbox: 0.0067, loss_cls: 0.0841, acc: 96.6992, loss_bbox: 0.1012, loss_mask: 0.1250, loss: 0.3232
2023-02-09 17:51:53,234 - mmdet - INFO - Saving checkpoint at 4 epochs
2023-02-09 17:52:02,438 - mmdet - INFO - Evaluating bbox...
2023-02-09 17:52:02,458 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.684
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.820
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.793
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.034
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.540
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.759
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.758
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.758
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.758
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.100
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.814

2023-02-09 17:52:02,458 - mmdet - INFO - Evaluating segm...
2023-02-09 17:52:02,481 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.733
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.814
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.809
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.007
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.553
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.814
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.794
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.794
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.794
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.050
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.767
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.844

2023-02-09 17:52:02,482 - mmdet - INFO - Exp name: mask_rcnn_r50_fpn_1x_wandb_coco.py
2023-02-09 17:52:02,482 - mmdet - INFO - Epoch(val) [4][13]	bbox_mAP: 0.6840, bbox_mAP_50: 0.8200, bbox_mAP_75: 0.7930, bbox_mAP_s: 0.0340, bbox_mAP_m: 0.5400, bbox_mAP_l: 0.7590, bbox_mAP_copypaste: 0.684 0.820 0.793 0.034 0.540 0.759, segm_mAP: 0.7330, segm_mAP_50: 0.8140, segm_mAP_75: 0.8090, segm_mAP_s: 0.0070, segm_mAP_m: 0.5530, segm_mAP_l: 0.8140, segm_mAP_copypaste: 0.733 0.814 0.809 0.007 0.553 0.814
2023-02-09 17:52:15,703 - mmdet - INFO - Epoch [5][10/31]	lr: 1.000e-03, eta: 0:06:54, time: 1.017, data_time: 0.603, memory: 3893, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0120, loss_cls: 0.0874, acc: 96.8262, loss_bbox: 0.1088, loss_mask: 0.0970, loss: 0.3142
2023-02-09 17:52:19,868 - mmdet - INFO - Epoch [5][20/31]	lr: 1.000e-03, eta: 0:06:36, time: 0.419, data_time: 0.032, memory: 3893, loss_rpn_cls: 0.0069, loss_rpn_bbox: 0.0080, loss_cls: 0.0821, acc: 97.0410, loss_bbox: 0.0874, loss_mask: 0.0892, loss: 0.2737
2023-02-09 17:52:24,294 - mmdet - INFO - Epoch [5][30/31]	lr: 1.000e-03, eta: 0:06:21, time: 0.440, data_time: 0.032, memory: 3893, loss_rpn_cls: 0.0128, loss_rpn_bbox: 0.0125, loss_cls: 0.1025, acc: 96.0254, loss_bbox: 0.1305, loss_mask: 0.1224, loss: 0.3808
2023-02-09 17:52:35,501 - mmdet - INFO - Epoch [6][10/31]	lr: 1.000e-03, eta: 0:06:26, time: 1.047, data_time: 0.616, memory: 3893, loss_rpn_cls: 0.0098, loss_rpn_bbox: 0.0123, loss_cls: 0.0800, acc: 97.2656, loss_bbox: 0.0967, loss_mask: 0.1125, loss: 0.3112
2023-02-09 17:52:39,799 - mmdet - INFO - Epoch [6][20/31]	lr: 1.000e-03, eta: 0:06:12, time: 0.430, data_time: 0.026, memory: 3893, loss_rpn_cls: 0.0058, loss_rpn_bbox: 0.0067, loss_cls: 0.0668, acc: 97.4512, loss_bbox: 0.0827, loss_mask: 0.0908, loss: 0.2528
2023-02-09 17:52:44,073 - mmdet - INFO - Epoch [6][30/31]	lr: 1.000e-03, eta: 0:05:58, time: 0.421, data_time: 0.028, memory: 3893, loss_rpn_cls: 0.0046, loss_rpn_bbox: 0.0130, loss_cls: 0.1094, acc: 95.6250, loss_bbox: 0.1264, loss_mask: 0.1074, loss: 0.3608
2023-02-09 17:52:50,864 - mmdet - INFO - Evaluating bbox...
2023-02-09 17:52:50,887 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.697
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.828
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.828
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.540
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.782
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.764
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.764
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.764
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.675
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.836

2023-02-09 17:52:50,887 - mmdet - INFO - Evaluating segm...
2023-02-09 17:52:50,910 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.744
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.817
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.817
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.529
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.840
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.878

2023-02-09 17:52:50,911 - mmdet - INFO - Exp name: mask_rcnn_r50_fpn_1x_wandb_coco.py
2023-02-09 17:52:50,911 - mmdet - INFO - Epoch(val) [6][13]	bbox_mAP: 0.6970, bbox_mAP_50: 0.8280, bbox_mAP_75: 0.8280, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.5400, bbox_mAP_l: 0.7820, bbox_mAP_copypaste: 0.697 0.828 0.828 0.000 0.540 0.782, segm_mAP: 0.7440, segm_mAP_50: 0.8170, segm_mAP_75: 0.8170, segm_mAP_s: 0.0000, segm_mAP_m: 0.5290, segm_mAP_l: 0.8400, segm_mAP_copypaste: 0.744 0.817 0.817 0.000 0.529 0.840
2023-02-09 17:53:02,935 - mmdet - INFO - Epoch [7][10/31]	lr: 1.000e-03, eta: 0:06:01, time: 1.058, data_time: 0.621, memory: 3893, loss_rpn_cls: 0.0055, loss_rpn_bbox: 0.0118, loss_cls: 0.0816, acc: 96.9141, loss_bbox: 0.1054, loss_mask: 0.1095, loss: 0.3138
2023-02-09 17:53:07,324 - mmdet - INFO - Epoch [7][20/31]	lr: 1.000e-03, eta: 0:05:48, time: 0.438, data_time: 0.032, memory: 3893, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0087, loss_cls: 0.0753, acc: 97.2070, loss_bbox: 0.0887, loss_mask: 0.0938, loss: 0.2712
2023-02-09 17:53:11,456 - mmdet - INFO - Epoch [7][30/31]	lr: 1.000e-03, eta: 0:05:36, time: 0.414, data_time: 0.033, memory: 3893, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0073, loss_cls: 0.0630, acc: 97.6562, loss_bbox: 0.0761, loss_mask: 0.0814, loss: 0.2311
2023-02-09 17:53:22,828 - mmdet - INFO - Epoch [8][10/31]	lr: 1.000e-03, eta: 0:05:37, time: 1.060, data_time: 0.628, memory: 3893, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0090, loss_cls: 0.0703, acc: 97.4512, loss_bbox: 0.0818, loss_mask: 0.0855, loss: 0.2503
2023-02-09 17:53:27,199 - mmdet - INFO - Epoch [8][20/31]	lr: 1.000e-03, eta: 0:05:26, time: 0.435, data_time: 0.033, memory: 3893, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0105, loss_cls: 0.0772, acc: 96.8652, loss_bbox: 0.0953, loss_mask: 0.1053, loss: 0.2925
2023-02-09 17:53:31,336 - mmdet - INFO - Epoch [8][30/31]	lr: 1.000e-03, eta: 0:05:15, time: 0.414, data_time: 0.031, memory: 3893, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0083, loss_cls: 0.0660, acc: 97.2852, loss_bbox: 0.0819, loss_mask: 0.0760, loss: 0.2363
2023-02-09 17:53:31,854 - mmdet - INFO - Saving checkpoint at 8 epochs
2023-02-09 17:53:40,950 - mmdet - INFO - Evaluating bbox...
2023-02-09 17:53:40,965 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.726
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.844
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.844
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.562
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.811
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.784
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.784
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.784
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.708
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.853

2023-02-09 17:53:40,966 - mmdet - INFO - Evaluating segm...
2023-02-09 17:53:40,982 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.751
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.829
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.829
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.538
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.843
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.717
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.872

2023-02-09 17:53:40,983 - mmdet - INFO - Exp name: mask_rcnn_r50_fpn_1x_wandb_coco.py
2023-02-09 17:53:40,983 - mmdet - INFO - Epoch(val) [8][13]	bbox_mAP: 0.7260, bbox_mAP_50: 0.8440, bbox_mAP_75: 0.8440, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.5620, bbox_mAP_l: 0.8110, bbox_mAP_copypaste: 0.726 0.844 0.844 0.000 0.562 0.811, segm_mAP: 0.7510, segm_mAP_50: 0.8290, segm_mAP_75: 0.8290, segm_mAP_s: 0.0000, segm_mAP_m: 0.5380, segm_mAP_l: 0.8430, segm_mAP_copypaste: 0.751 0.829 0.829 0.000 0.538 0.843
2023-02-09 17:53:53,676 - mmdet - INFO - Epoch [9][10/31]	lr: 1.000e-03, eta: 0:05:14, time: 1.033, data_time: 0.617, memory: 3893, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0051, loss_cls: 0.0484, acc: 98.1934, loss_bbox: 0.0642, loss_mask: 0.0963, loss: 0.2159
2023-02-09 17:53:58,132 - mmdet - INFO - Epoch [9][20/31]	lr: 1.000e-03, eta: 0:05:04, time: 0.445, data_time: 0.037, memory: 3893, loss_rpn_cls: 0.0059, loss_rpn_bbox: 0.0130, loss_cls: 0.0864, acc: 96.6797, loss_bbox: 0.1025, loss_mask: 0.1049, loss: 0.3127
2023-02-09 17:54:02,455 - mmdet - INFO - Epoch [9][30/31]	lr: 1.000e-03, eta: 0:04:54, time: 0.433, data_time: 0.033, memory: 3937, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0093, loss_cls: 0.0638, acc: 97.5488, loss_bbox: 0.0782, loss_mask: 0.0945, loss: 0.2485
2023-02-09 17:54:13,475 - mmdet - INFO - Epoch [10][10/31]	lr: 1.000e-03, eta: 0:04:53, time: 1.035, data_time: 0.616, memory: 3937, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0075, loss_cls: 0.0579, acc: 97.8125, loss_bbox: 0.0672, loss_mask: 0.0879, loss: 0.2253
2023-02-09 17:54:17,868 - mmdet - INFO - Epoch [10][20/31]	lr: 1.000e-03, eta: 0:04:43, time: 0.433, data_time: 0.027, memory: 3937, loss_rpn_cls: 0.0039, loss_rpn_bbox: 0.0098, loss_cls: 0.0709, acc: 97.2852, loss_bbox: 0.0927, loss_mask: 0.0932, loss: 0.2704
2023-02-09 17:54:22,026 - mmdet - INFO - Epoch [10][30/31]	lr: 1.000e-03, eta: 0:04:34, time: 0.420, data_time: 0.034, memory: 3937, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0096, loss_cls: 0.0681, acc: 97.2656, loss_bbox: 0.0848, loss_mask: 0.0789, loss: 0.2440
2023-02-09 17:54:28,559 - mmdet - INFO - Evaluating bbox...
2023-02-09 17:54:28,573 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.704
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.849
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.807
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.556
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.786
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.762
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.762
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.762
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.683
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.831

2023-02-09 17:54:28,574 - mmdet - INFO - Evaluating segm...
2023-02-09 17:54:28,587 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.752
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.830
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.830
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.538
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.849
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.798
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.798
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.798
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.692
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.878

2023-02-09 17:54:28,588 - mmdet - INFO - Exp name: mask_rcnn_r50_fpn_1x_wandb_coco.py
2023-02-09 17:54:28,588 - mmdet - INFO - Epoch(val) [10][13]	bbox_mAP: 0.7040, bbox_mAP_50: 0.8490, bbox_mAP_75: 0.8070, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.5560, bbox_mAP_l: 0.7860, bbox_mAP_copypaste: 0.704 0.849 0.807 0.000 0.556 0.786, segm_mAP: 0.7520, segm_mAP_50: 0.8300, segm_mAP_75: 0.8300, segm_mAP_s: 0.0000, segm_mAP_m: 0.5380, segm_mAP_l: 0.8490, segm_mAP_copypaste: 0.752 0.830 0.830 0.000 0.538 0.849
2023-02-09 17:54:40,273 - mmdet - INFO - Epoch [11][10/31]	lr: 1.000e-03, eta: 0:04:31, time: 1.036, data_time: 0.612, memory: 3937, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0077, loss_cls: 0.0618, acc: 97.6855, loss_bbox: 0.0825, loss_mask: 0.0881, loss: 0.2431
2023-02-09 17:54:44,678 - mmdet - INFO - Epoch [11][20/31]	lr: 1.000e-03, eta: 0:04:23, time: 0.445, data_time: 0.034, memory: 3937, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0072, loss_cls: 0.0497, acc: 98.1836, loss_bbox: 0.0655, loss_mask: 0.0781, loss: 0.2036
2023-02-09 17:54:48,786 - mmdet - INFO - Epoch [11][30/31]	lr: 1.000e-03, eta: 0:04:14, time: 0.412, data_time: 0.030, memory: 3937, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0094, loss_cls: 0.0586, acc: 97.6562, loss_bbox: 0.0738, loss_mask: 0.0772, loss: 0.2203
2023-02-09 17:55:00,250 - mmdet - INFO - Epoch [12][10/31]	lr: 1.000e-03, eta: 0:04:11, time: 1.065, data_time: 0.623, memory: 3937, loss_rpn_cls: 0.0018, loss_rpn_bbox: 0.0054, loss_cls: 0.0565, acc: 97.6465, loss_bbox: 0.0758, loss_mask: 0.0828, loss: 0.2223
2023-02-09 17:55:04,624 - mmdet - INFO - Epoch [12][20/31]	lr: 1.000e-03, eta: 0:04:02, time: 0.441, data_time: 0.037, memory: 3937, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0109, loss_cls: 0.0524, acc: 97.9590, loss_bbox: 0.0599, loss_mask: 0.0802, loss: 0.2069
2023-02-09 17:55:08,984 - mmdet - INFO - Epoch [12][30/31]	lr: 1.000e-03, eta: 0:03:54, time: 0.435, data_time: 0.031, memory: 3937, loss_rpn_cls: 0.0018, loss_rpn_bbox: 0.0104, loss_cls: 0.0702, acc: 97.4902, loss_bbox: 0.0846, loss_mask: 0.0922, loss: 0.2592
2023-02-09 17:55:09,453 - mmdet - INFO - Saving checkpoint at 12 epochs
2023-02-09 17:55:18,607 - mmdet - INFO - Evaluating bbox...
2023-02-09 17:55:18,622 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.714
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.852
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.827
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.545
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.794
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.768
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.768
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.768
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.833

2023-02-09 17:55:18,622 - mmdet - INFO - Evaluating segm...
2023-02-09 17:55:18,637 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.756
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.834
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.834
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.521
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.852
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.878

2023-02-09 17:55:18,638 - mmdet - INFO - Exp name: mask_rcnn_r50_fpn_1x_wandb_coco.py
2023-02-09 17:55:18,639 - mmdet - INFO - Epoch(val) [12][13]	bbox_mAP: 0.7140, bbox_mAP_50: 0.8520, bbox_mAP_75: 0.8270, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.5450, bbox_mAP_l: 0.7940, bbox_mAP_copypaste: 0.714 0.852 0.827 0.000 0.545 0.794, segm_mAP: 0.7560, segm_mAP_50: 0.8340, segm_mAP_75: 0.8340, segm_mAP_s: 0.0000, segm_mAP_m: 0.5210, segm_mAP_l: 0.8520, segm_mAP_copypaste: 0.756 0.834 0.834 0.000 0.521 0.852
2023-02-09 17:55:31,572 - mmdet - INFO - Epoch [13][10/31]	lr: 1.000e-03, eta: 0:03:51, time: 1.069, data_time: 0.639, memory: 3937, loss_rpn_cls: 0.0018, loss_rpn_bbox: 0.0066, loss_cls: 0.0481, acc: 98.2715, loss_bbox: 0.0676, loss_mask: 0.0974, loss: 0.2214
2023-02-09 17:55:35,888 - mmdet - INFO - Epoch [13][20/31]	lr: 1.000e-03, eta: 0:03:42, time: 0.430, data_time: 0.028, memory: 3937, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0086, loss_cls: 0.0553, acc: 97.8906, loss_bbox: 0.0688, loss_mask: 0.0759, loss: 0.2102
2023-02-09 17:55:40,424 - mmdet - INFO - Epoch [13][30/31]	lr: 1.000e-03, eta: 0:03:34, time: 0.446, data_time: 0.031, memory: 3937, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0092, loss_cls: 0.0623, acc: 97.6074, loss_bbox: 0.0729, loss_mask: 0.0804, loss: 0.2276
2023-02-09 17:55:51,789 - mmdet - INFO - Epoch [14][10/31]	lr: 1.000e-03, eta: 0:03:30, time: 1.059, data_time: 0.616, memory: 3937, loss_rpn_cls: 0.0012, loss_rpn_bbox: 0.0074, loss_cls: 0.0510, acc: 97.9883, loss_bbox: 0.0685, loss_mask: 0.0812, loss: 0.2093
2023-02-09 17:55:55,994 - mmdet - INFO - Epoch [14][20/31]	lr: 1.000e-03, eta: 0:03:22, time: 0.426, data_time: 0.033, memory: 3937, loss_rpn_cls: 0.0018, loss_rpn_bbox: 0.0069, loss_cls: 0.0468, acc: 98.3301, loss_bbox: 0.0612, loss_mask: 0.0853, loss: 0.2020
2023-02-09 17:56:00,362 - mmdet - INFO - Epoch [14][30/31]	lr: 1.000e-03, eta: 0:03:15, time: 0.429, data_time: 0.027, memory: 3937, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0068, loss_cls: 0.0564, acc: 97.7051, loss_bbox: 0.0677, loss_mask: 0.0735, loss: 0.2059
2023-02-09 17:56:06,935 - mmdet - INFO - Evaluating bbox...
2023-02-09 17:56:06,949 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.721
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.846
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.823
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.521
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.814
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.780
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.780
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.780
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.675
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.858

2023-02-09 17:56:06,950 - mmdet - INFO - Evaluating segm...
2023-02-09 17:56:06,965 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.752
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.846
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.828
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.510
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.849
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.708
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.875

2023-02-09 17:56:06,966 - mmdet - INFO - Exp name: mask_rcnn_r50_fpn_1x_wandb_coco.py
2023-02-09 17:56:06,966 - mmdet - INFO - Epoch(val) [14][13]	bbox_mAP: 0.7210, bbox_mAP_50: 0.8460, bbox_mAP_75: 0.8230, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.5210, bbox_mAP_l: 0.8140, bbox_mAP_copypaste: 0.721 0.846 0.823 0.000 0.521 0.814, segm_mAP: 0.7520, segm_mAP_50: 0.8460, segm_mAP_75: 0.8280, segm_mAP_s: 0.0000, segm_mAP_m: 0.5100, segm_mAP_l: 0.8490, segm_mAP_copypaste: 0.752 0.846 0.828 0.000 0.510 0.849
2023-02-09 17:56:18,630 - mmdet - INFO - Epoch [15][10/31]	lr: 1.000e-03, eta: 0:03:10, time: 1.029, data_time: 0.613, memory: 3937, loss_rpn_cls: 0.0008, loss_rpn_bbox: 0.0050, loss_cls: 0.0352, acc: 98.6523, loss_bbox: 0.0442, loss_mask: 0.0589, loss: 0.1442
2023-02-09 17:56:23,110 - mmdet - INFO - Epoch [15][20/31]	lr: 1.000e-03, eta: 0:03:03, time: 0.452, data_time: 0.033, memory: 3937, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0061, loss_cls: 0.0476, acc: 98.2812, loss_bbox: 0.0546, loss_mask: 0.0729, loss: 0.1837
2023-02-09 17:56:27,531 - mmdet - INFO - Epoch [15][30/31]	lr: 1.000e-03, eta: 0:02:55, time: 0.438, data_time: 0.033, memory: 3937, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0116, loss_cls: 0.0681, acc: 97.3730, loss_bbox: 0.1035, loss_mask: 0.0970, loss: 0.2815
2023-02-09 17:56:38,966 - mmdet - INFO - Epoch [16][10/31]	lr: 1.000e-03, eta: 0:02:50, time: 1.069, data_time: 0.617, memory: 3937, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0070, loss_cls: 0.0494, acc: 97.9688, loss_bbox: 0.0709, loss_mask: 0.0919, loss: 0.2205
2023-02-09 17:56:43,133 - mmdet - INFO - Epoch [16][20/31]	lr: 1.000e-03, eta: 0:02:43, time: 0.423, data_time: 0.031, memory: 3937, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0043, loss_cls: 0.0368, acc: 98.4863, loss_bbox: 0.0451, loss_mask: 0.0712, loss: 0.1583
2023-02-09 17:56:47,619 - mmdet - INFO - Epoch [16][30/31]	lr: 1.000e-03, eta: 0:02:36, time: 0.442, data_time: 0.031, memory: 3937, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0100, loss_cls: 0.0590, acc: 97.7246, loss_bbox: 0.0772, loss_mask: 0.0776, loss: 0.2252
2023-02-09 17:56:48,094 - mmdet - INFO - Saving checkpoint at 16 epochs
2023-02-09 17:56:56,935 - mmdet - INFO - Evaluating bbox...
2023-02-09 17:56:56,951 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.725
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.848
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.826
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.542
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.812
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.784
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.784
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.784
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.708
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.853

2023-02-09 17:56:56,952 - mmdet - INFO - Evaluating segm...
2023-02-09 17:56:56,967 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.755
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.831
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.831
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.507
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.850
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.802
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.802
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.802
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.717
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.875

2023-02-09 17:56:56,968 - mmdet - INFO - Exp name: mask_rcnn_r50_fpn_1x_wandb_coco.py
2023-02-09 17:56:56,968 - mmdet - INFO - Epoch(val) [16][13]	bbox_mAP: 0.7250, bbox_mAP_50: 0.8480, bbox_mAP_75: 0.8260, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.5420, bbox_mAP_l: 0.8120, bbox_mAP_copypaste: 0.725 0.848 0.826 0.000 0.542 0.812, segm_mAP: 0.7550, segm_mAP_50: 0.8310, segm_mAP_75: 0.8310, segm_mAP_s: 0.0000, segm_mAP_m: 0.5070, segm_mAP_l: 0.8500, segm_mAP_copypaste: 0.755 0.831 0.831 0.000 0.507 0.850
2023-02-09 17:57:10,254 - mmdet - INFO - Epoch [17][10/31]	lr: 1.000e-03, eta: 0:02:31, time: 1.094, data_time: 0.650, memory: 3937, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0085, loss_cls: 0.0527, acc: 97.9590, loss_bbox: 0.0707, loss_mask: 0.0806, loss: 0.2138
2023-02-09 17:57:14,573 - mmdet - INFO - Epoch [17][20/31]	lr: 1.000e-03, eta: 0:02:23, time: 0.429, data_time: 0.031, memory: 3937, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0076, loss_cls: 0.0373, acc: 98.5547, loss_bbox: 0.0562, loss_mask: 0.0677, loss: 0.1700
2023-02-09 17:57:19,147 - mmdet - INFO - Epoch [17][30/31]	lr: 1.000e-03, eta: 0:02:16, time: 0.462, data_time: 0.033, memory: 3937, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0069, loss_cls: 0.0536, acc: 97.9492, loss_bbox: 0.0745, loss_mask: 0.0858, loss: 0.2228
2023-02-09 17:57:30,885 - mmdet - INFO - Epoch [18][10/31]	lr: 1.000e-03, eta: 0:02:11, time: 1.095, data_time: 0.641, memory: 3937, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0080, loss_cls: 0.0490, acc: 98.0566, loss_bbox: 0.0694, loss_mask: 0.0811, loss: 0.2109
2023-02-09 17:57:35,435 - mmdet - INFO - Epoch [18][20/31]	lr: 1.000e-03, eta: 0:02:04, time: 0.455, data_time: 0.034, memory: 3937, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0064, loss_cls: 0.0372, acc: 98.5156, loss_bbox: 0.0498, loss_mask: 0.0632, loss: 0.1575
2023-02-09 17:57:39,610 - mmdet - INFO - Epoch [18][30/31]	lr: 1.000e-03, eta: 0:01:57, time: 0.424, data_time: 0.034, memory: 3937, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0068, loss_cls: 0.0435, acc: 98.1836, loss_bbox: 0.0614, loss_mask: 0.0791, loss: 0.1917
2023-02-09 17:57:46,305 - mmdet - INFO - Evaluating bbox...
2023-02-09 17:57:46,319 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.724
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.844
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.823
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.541
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.810
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.790
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.790
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.790
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.725
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.856

2023-02-09 17:57:46,319 - mmdet - INFO - Evaluating segm...
2023-02-09 17:57:46,336 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.751
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.827
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.827
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.496
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.847
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.802
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.802
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.802
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.725
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.872

2023-02-09 17:57:46,338 - mmdet - INFO - Exp name: mask_rcnn_r50_fpn_1x_wandb_coco.py
2023-02-09 17:57:46,338 - mmdet - INFO - Epoch(val) [18][13]	bbox_mAP: 0.7240, bbox_mAP_50: 0.8440, bbox_mAP_75: 0.8230, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.5410, bbox_mAP_l: 0.8100, bbox_mAP_copypaste: 0.724 0.844 0.823 0.000 0.541 0.810, segm_mAP: 0.7510, segm_mAP_50: 0.8270, segm_mAP_75: 0.8270, segm_mAP_s: 0.0000, segm_mAP_m: 0.4960, segm_mAP_l: 0.8470, segm_mAP_copypaste: 0.751 0.827 0.827 0.000 0.496 0.847
2023-02-09 17:57:58,123 - mmdet - INFO - Epoch [19][10/31]	lr: 1.000e-03, eta: 0:01:51, time: 1.041, data_time: 0.613, memory: 3937, loss_rpn_cls: 0.0007, loss_rpn_bbox: 0.0054, loss_cls: 0.0390, acc: 98.4375, loss_bbox: 0.0559, loss_mask: 0.0690, loss: 0.1700
2023-02-09 17:58:02,578 - mmdet - INFO - Epoch [19][20/31]	lr: 1.000e-03, eta: 0:01:44, time: 0.446, data_time: 0.036, memory: 3937, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0071, loss_cls: 0.0408, acc: 98.2910, loss_bbox: 0.0563, loss_mask: 0.0744, loss: 0.1796
2023-02-09 17:58:06,977 - mmdet - INFO - Epoch [19][30/31]	lr: 1.000e-03, eta: 0:01:37, time: 0.440, data_time: 0.035, memory: 3937, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0094, loss_cls: 0.0505, acc: 97.8809, loss_bbox: 0.0663, loss_mask: 0.0863, loss: 0.2139
2023-02-09 17:58:18,891 - mmdet - INFO - Epoch [20][10/31]	lr: 1.000e-03, eta: 0:01:32, time: 1.116, data_time: 0.668, memory: 3937, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0106, loss_cls: 0.0519, acc: 98.0762, loss_bbox: 0.0751, loss_mask: 0.0782, loss: 0.2167
2023-02-09 17:58:23,363 - mmdet - INFO - Epoch [20][20/31]	lr: 1.000e-03, eta: 0:01:25, time: 0.442, data_time: 0.030, memory: 3937, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0053, loss_cls: 0.0373, acc: 98.5254, loss_bbox: 0.0526, loss_mask: 0.0828, loss: 0.1789
2023-02-09 17:58:27,714 - mmdet - INFO - Epoch [20][30/31]	lr: 1.000e-03, eta: 0:01:18, time: 0.438, data_time: 0.036, memory: 3937, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0060, loss_cls: 0.0388, acc: 98.4180, loss_bbox: 0.0586, loss_mask: 0.0691, loss: 0.1737
2023-02-09 17:58:28,219 - mmdet - INFO - Saving checkpoint at 20 epochs
2023-02-09 17:58:37,042 - mmdet - INFO - Evaluating bbox...
2023-02-09 17:58:37,054 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.721
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.846
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.824
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.500
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.811
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.786
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.786
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.786
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.858

2023-02-09 17:58:37,055 - mmdet - INFO - Evaluating segm...
2023-02-09 17:58:37,069 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.753
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.846
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.826
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.468
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.852
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.806
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.806
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.806
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.725
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.878

2023-02-09 17:58:37,071 - mmdet - INFO - Exp name: mask_rcnn_r50_fpn_1x_wandb_coco.py
2023-02-09 17:58:37,071 - mmdet - INFO - Epoch(val) [20][13]	bbox_mAP: 0.7210, bbox_mAP_50: 0.8460, bbox_mAP_75: 0.8240, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.5000, bbox_mAP_l: 0.8110, bbox_mAP_copypaste: 0.721 0.846 0.824 0.000 0.500 0.811, segm_mAP: 0.7530, segm_mAP_50: 0.8460, segm_mAP_75: 0.8260, segm_mAP_s: 0.0000, segm_mAP_m: 0.4680, segm_mAP_l: 0.8520, segm_mAP_copypaste: 0.753 0.846 0.826 0.000 0.468 0.852
2023-02-09 17:58:50,532 - mmdet - INFO - Epoch [21][10/31]	lr: 1.000e-03, eta: 0:01:12, time: 1.109, data_time: 0.648, memory: 3937, loss_rpn_cls: 0.0017, loss_rpn_bbox: 0.0076, loss_cls: 0.0422, acc: 98.3496, loss_bbox: 0.0563, loss_mask: 0.0670, loss: 0.1748
2023-02-09 17:58:54,846 - mmdet - INFO - Epoch [21][20/31]	lr: 1.000e-03, eta: 0:01:05, time: 0.434, data_time: 0.036, memory: 3937, loss_rpn_cls: 0.0008, loss_rpn_bbox: 0.0051, loss_cls: 0.0326, acc: 98.7695, loss_bbox: 0.0474, loss_mask: 0.0634, loss: 0.1494
2023-02-09 17:58:58,986 - mmdet - INFO - Epoch [21][30/31]	lr: 1.000e-03, eta: 0:00:59, time: 0.417, data_time: 0.031, memory: 3937, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0048, loss_cls: 0.0276, acc: 98.9648, loss_bbox: 0.0449, loss_mask: 0.0650, loss: 0.1439
2023-02-09 17:59:10,527 - mmdet - INFO - Epoch [22][10/31]	lr: 1.000e-03, eta: 0:00:52, time: 1.071, data_time: 0.626, memory: 3937, loss_rpn_cls: 0.0012, loss_rpn_bbox: 0.0048, loss_cls: 0.0315, acc: 98.8184, loss_bbox: 0.0486, loss_mask: 0.0641, loss: 0.1502
2023-02-09 17:59:14,844 - mmdet - INFO - Epoch [22][20/31]	lr: 1.000e-03, eta: 0:00:46, time: 0.429, data_time: 0.030, memory: 3937, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0039, loss_cls: 0.0304, acc: 98.7109, loss_bbox: 0.0423, loss_mask: 0.0658, loss: 0.1432
2023-02-09 17:59:19,409 - mmdet - INFO - Epoch [22][30/31]	lr: 1.000e-03, eta: 0:00:39, time: 0.458, data_time: 0.036, memory: 3937, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0092, loss_cls: 0.0494, acc: 98.1934, loss_bbox: 0.0759, loss_mask: 0.0711, loss: 0.2074
2023-02-09 17:59:26,220 - mmdet - INFO - Evaluating bbox...
2023-02-09 17:59:26,238 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.722
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.832
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.809
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.467
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.826
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.778
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.778
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.778
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.869

2023-02-09 17:59:26,239 - mmdet - INFO - Evaluating segm...
2023-02-09 17:59:26,256 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.737
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.812
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.812
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.436
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.845
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.784
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.784
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.784
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.642
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.875

2023-02-09 17:59:26,258 - mmdet - INFO - Exp name: mask_rcnn_r50_fpn_1x_wandb_coco.py
2023-02-09 17:59:26,258 - mmdet - INFO - Epoch(val) [22][13]	bbox_mAP: 0.7220, bbox_mAP_50: 0.8320, bbox_mAP_75: 0.8090, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.4670, bbox_mAP_l: 0.8260, bbox_mAP_copypaste: 0.722 0.832 0.809 0.000 0.467 0.826, segm_mAP: 0.7370, segm_mAP_50: 0.8120, segm_mAP_75: 0.8120, segm_mAP_s: 0.0000, segm_mAP_m: 0.4360, segm_mAP_l: 0.8450, segm_mAP_copypaste: 0.737 0.812 0.812 0.000 0.436 0.845
2023-02-09 17:59:38,447 - mmdet - INFO - Epoch [23][10/31]	lr: 1.000e-03, eta: 0:00:32, time: 1.083, data_time: 0.647, memory: 3937, loss_rpn_cls: 0.0005, loss_rpn_bbox: 0.0070, loss_cls: 0.0345, acc: 98.6426, loss_bbox: 0.0517, loss_mask: 0.0699, loss: 0.1637
2023-02-09 17:59:42,929 - mmdet - INFO - Epoch [23][20/31]	lr: 1.000e-03, eta: 0:00:26, time: 0.444, data_time: 0.028, memory: 3937, loss_rpn_cls: 0.0006, loss_rpn_bbox: 0.0058, loss_cls: 0.0386, acc: 98.4375, loss_bbox: 0.0574, loss_mask: 0.0796, loss: 0.1820
2023-02-09 17:59:47,552 - mmdet - INFO - Epoch [23][30/31]	lr: 1.000e-03, eta: 0:00:20, time: 0.466, data_time: 0.033, memory: 3937, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0088, loss_cls: 0.0404, acc: 98.4082, loss_bbox: 0.0635, loss_mask: 0.0747, loss: 0.1888
2023-02-09 17:59:58,940 - mmdet - INFO - Epoch [24][10/31]	lr: 1.000e-03, eta: 0:00:13, time: 1.066, data_time: 0.625, memory: 3937, loss_rpn_cls: 0.0006, loss_rpn_bbox: 0.0073, loss_cls: 0.0415, acc: 98.3789, loss_bbox: 0.0589, loss_mask: 0.0662, loss: 0.1744
2023-02-09 18:00:03,255 - mmdet - INFO - Epoch [24][20/31]	lr: 1.000e-03, eta: 0:00:06, time: 0.434, data_time: 0.028, memory: 3937, loss_rpn_cls: 0.0008, loss_rpn_bbox: 0.0070, loss_cls: 0.0362, acc: 98.6133, loss_bbox: 0.0596, loss_mask: 0.0718, loss: 0.1755
2023-02-09 18:00:07,666 - mmdet - INFO - Epoch [24][30/31]	lr: 1.000e-03, eta: 0:00:00, time: 0.436, data_time: 0.026, memory: 3937, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0044, loss_cls: 0.0325, acc: 98.6328, loss_bbox: 0.0430, loss_mask: 0.0587, loss: 0.1390
2023-02-09 18:00:08,187 - mmdet - INFO - Saving checkpoint at 24 epochs
2023-02-09 18:00:17,259 - mmdet - INFO - Evaluating bbox...
2023-02-09 18:00:17,273 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.712
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.832
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.832
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.454
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.815
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.768
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.768
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.768
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.856

2023-02-09 18:00:17,273 - mmdet - INFO - Evaluating segm...
2023-02-09 18:00:17,288 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.746
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.812
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.812
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.445
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.858
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.792
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.792
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.792
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.642
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.886

2023-02-09 18:00:17,289 - mmdet - INFO - Exp name: mask_rcnn_r50_fpn_1x_wandb_coco.py
2023-02-09 18:00:17,290 - mmdet - INFO - Epoch(val) [24][13]	bbox_mAP: 0.7120, bbox_mAP_50: 0.8320, bbox_mAP_75: 0.8320, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.4540, bbox_mAP_l: 0.8150, bbox_mAP_copypaste: 0.712 0.832 0.832 0.000 0.454 0.815, segm_mAP: 0.7460, segm_mAP_50: 0.8120, segm_mAP_75: 0.8120, segm_mAP_s: 0.0000, segm_mAP_m: 0.4450, segm_mAP_l: 0.8580, segm_mAP_copypaste: 0.746 0.812 0.812 0.000 0.445 0.858
